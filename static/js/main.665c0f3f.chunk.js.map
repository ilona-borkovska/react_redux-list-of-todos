{"version":3,"sources":["features/currentTodo.ts","types/Status.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","Status","status","query","initState","ALL","filterReducer","_objectSpread","loading","todos","error","isLoading","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","_ref","dispatch","selectedTodo","_jsx","_Fragment","children","className","_jsxs","map","cn","id","completed","title","onClick","CurrentTodoActions","TodoFilter","_useAppSelector","onSubmit","event","preventDefault","value","onChange","e","filterActions","target","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","_useState","useState","_useState2","_slicedToArray","setIsLoading","_useState3","_useState4","user","setUser","useEffect","userId","concat","userFromServer","catch","finally","href","email","name","App","_useAppSelector2","todosActions","todosFromServer","err","preparedTodos","React","useMemo","filteredTodos","normalizedQuery","trim","toLowerCase","includes","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.665c0f3f.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Status } from '../types/Status';\n\ntype FilterAction = {\n  type: 'filterTodos/STATUS';\n  payload: Status;\n};\n\ntype FindAction = {\n  type: 'filterTodos/QUERY';\n  payload: string;\n};\n\nconst filterTodos = (status: Status): FilterAction => ({\n  type: 'filterTodos/STATUS',\n  payload: status,\n});\n\nconst findTodos = (query: string): FindAction => ({\n  type: 'filterTodos/QUERY',\n  payload: query,\n});\n\nexport const actions = { filterTodos, findTodos };\n\ntype Action = FilterAction | FindAction;\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\nconst initState = {\n  query: '',\n  status: Status.ALL,\n};\n\nconst filterReducer = (\n  state = initState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filterTodos/STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    case 'filterTodos/QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\ntype SetLoadingAction = {\n  type: 'todos/SET_LOADING',\n  payload: boolean,\n};\n\ntype SetErrorAction = {\n  type: 'todos/SET_ERROR',\n  payload: string,\n};\n\nconst set = (todos: Todo[]): SetAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nconst setLoading = (isLoading: boolean): SetLoadingAction => ({\n  type: 'todos/SET_LOADING',\n  payload: isLoading,\n});\n\nconst setError = (error: string): SetErrorAction => ({\n  type: 'todos/SET_ERROR',\n  payload: error,\n});\n\ntype State = {\n  loading: boolean,\n  todos: Todo[],\n  error: string,\n};\n\nconst initState = {\n  loading: false,\n  todos: [],\n  error: '',\n};\n\ntype Action = SetAction | SetLoadingAction | SetErrorAction;\n\nexport const actions = { set, setLoading, setError };\n\nconst todosReducer = (\n  state = initState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    case 'todos/SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case 'todos/SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as CurrentTodoActions } from '../../features/currentTodo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  return (\n    <>\n      {todos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => (\n              <tr\n                data-cy=\"todo\"\n                key={todo.id}\n                className={cn({\n                  'has-background-info-light': selectedTodo?.id === todo.id,\n                })}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={cn({\n                      'has-text-danger': !todo.completed,\n                      'has-text-success': todo.completed,\n                    })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(CurrentTodoActions.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn('far', {\n                          'fa-eye-slash': selectedTodo?.id === todo.id,\n                          'fa-eye': !selectedTodo\n                            || selectedTodo?.id !== todo.id,\n                        })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const { status, query } = useAppSelector(state => state.filter);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(e) => {\n              dispatch(filterActions.filterTodos(e.target.value as Status));\n            }}\n          >\n            <option\n              value={Status.ALL}\n            >\n              All\n            </option>\n\n            <option\n              value={Status.ACTIVE}\n            >\n              Active\n            </option>\n\n            <option\n              value={Status.COMPLETED}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => dispatch(filterActions.findTodos(e.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.findTodos(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions as CurrentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    getUser(selectedTodo.userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n      })\n      .catch(() => setUser(null))\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <>\n      {selectedTodo && (\n        <div\n          className={cn('modal', {\n            'is-active': selectedTodo,\n          })}\n          data-cy=\"modal\"\n        >\n          <div className=\"modal-background\" />\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${selectedTodo?.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={() => dispatch(CurrentTodoActions.removeTodo())}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {selectedTodo?.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  <strong\n                    className={cn({\n                      'has-text-danger': !selectedTodo?.completed,\n                      'has-text-success': selectedTodo?.completed,\n                    })}\n                  >\n                    {selectedTodo?.completed ? 'Done' : 'Planned'}\n                  </strong>\n\n                  {' by '}\n                  {user ? (\n                    <a href={`mailto:${user.email}`}>{user.name}</a>\n                  ) : (\n                    <span>Anonim</span>\n                  )}\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { error, todos, loading } = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  useEffect(() => {\n    dispatch(todosActions.setLoading(true));\n\n    getTodos()\n      .then(todosFromServer => {\n        dispatch(todosActions.set(todosFromServer));\n      })\n      .catch(err => dispatch(todosActions.setError(err)))\n      .finally(() => dispatch(todosActions.setLoading(false)));\n  }, []);\n\n  const preparedTodos = React.useMemo(() => {\n    let filteredTodos: Todo[] = todos;\n\n    if (filteredTodos.length === 0) {\n      return [];\n    }\n\n    const normalizedQuery = query.trim().toLowerCase();\n\n    if (normalizedQuery) {\n      filteredTodos = filteredTodos\n        .filter(todo => todo.title\n          .toLowerCase()\n          .includes(normalizedQuery));\n    }\n\n    switch (status) {\n      case Status.COMPLETED:\n        return filteredTodos\n          .filter(todo => todo.completed);\n\n      case Status.ACTIVE:\n        return filteredTodos\n          .filter(todo => !todo.completed);\n      default:\n        return filteredTodos;\n    }\n  }, [todos, status, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {error && (\n                <p className=\"notification is-warning\">{error}</p>\n              )}\n\n              {loading && !error ? (\n                <Loader />\n              ) : (\n                <TodoList todos={preparedTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}